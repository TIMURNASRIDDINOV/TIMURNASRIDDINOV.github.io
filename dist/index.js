// Simple JavaScript version for browser compatibility
const { useState, useEffect } = React;

// Product helpers
const ProductHelpers = {
  isProductCustomizable: (product) => product.customizable,

  getProductTypeLabel: (type) => {
    switch (type) {
      case "t-shirt":
        return "–§—É—Ç–±–æ–ª–∫–∞";
      case "underwear":
        return "–ë–µ–ª—å–µ";
      default:
        return "–¢–æ–≤–∞—Ä";
    }
  },

  formatPrice: (price) => {
    return new Intl.NumberFormat("ru-RU", {
      style: "currency",
      currency: "RUB",
      minimumFractionDigits: 0,
    }).format(price);
  },
};

// Default products data
const defaultProducts = [
  {
    id: 1,
    name: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞",
    type: "t-shirt",
    sizes: ["S", "M", "L", "XL"],
    colors: [
      { name: "–ë–µ–ª—ã–π", code: "white", hex: "#FFFFFF" },
      { name: "–ß–µ—Ä–Ω—ã–π", code: "black", hex: "#000000" },
      { name: "–°–µ—Ä—ã–π", code: "gray", hex: "#808080" },
    ],
    price: 1299,
    imageURL: "/images/tshirt1.jpg",
    customizable: true,
    description: "–£–¥–æ–±–Ω–∞—è —Ö–ª–æ–ø–∫–æ–≤–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞",
  },
  {
    id: 2,
    name: "–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞",
    type: "t-shirt",
    sizes: ["M", "L", "XL", "XXL"],
    colors: [
      { name: "–¢–µ–º–Ω–æ-—Å–∏–Ω–∏–π", code: "navy", hex: "#1E3A8A" },
      { name: "–ö—Ä–∞—Å–Ω—ã–π", code: "red", hex: "#DC2626" },
      { name: "–ó–µ–ª–µ–Ω—ã–π", code: "green", hex: "#16A34A" },
    ],
    price: 1599,
    imageURL: "/images/tshirt2.jpg",
    customizable: true,
    description: "–î—ã—à–∞—â–∞—è —Ç–∫–∞–Ω—å –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞",
  },
  {
    id: 3,
    name: "–ë–æ–∫—Å–µ—Ä—ã Premium",
    type: "underwear",
    sizes: ["S", "M", "L", "XL"],
    colors: [
      { name: "–ß–µ—Ä–Ω—ã–π", code: "black", hex: "#000000" },
      { name: "–°–µ—Ä—ã–π", code: "gray", hex: "#6B7280" },
      { name: "–¢–µ–º–Ω–æ-—Å–∏–Ω–∏–π", code: "navy", hex: "#1E3D6F" },
    ],
    price: 899,
    imageURL: "/images/underwear1.jpg",
    customizable: false,
    description: "–ú—è–≥–∫–æ–µ —Ö–ª–æ–ø–∫–æ–≤–æ–µ –±–µ–ª—å–µ",
  },
  {
    id: 4,
    name: "–¢—Ä—É—Å—ã-—Å–ª–∏–ø—ã",
    type: "underwear",
    sizes: ["XS", "S", "M", "L"],
    colors: [
      { name: "–ë–µ–ª—ã–π", code: "white", hex: "#FFFFFF" },
      { name: "–ß–µ—Ä–Ω—ã–π", code: "black", hex: "#000000" },
    ],
    price: 699,
    imageURL: "/images/underwear2.jpg",
    customizable: false,
    description: "–ö–æ–º—Ñ–æ—Ä—Ç–Ω–∞—è –ø–æ—Å–∞–¥–∫–∞",
  },
];

// Product List Component
function ProductList({ products = defaultProducts }) {
  const handleCustomize = (product) => {
    if (!ProductHelpers.isProductCustomizable(product)) {
      alert("–≠—Ç–æ—Ç —Ç–æ–≤–∞—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—é");
      return;
    }
    console.log("–ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–∞:", product.name);
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏
  };

  const handleAddToCart = (product) => {
    console.log("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É:", product.name);
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
  };

  return React.createElement(
    "div",
    { className: "product-list" },
    React.createElement(
      "h2",
      { className: "product-list__title" },
      "–ù–∞—à–∏ —Ç–æ–≤–∞—Ä—ã"
    ),
    React.createElement(
      "div",
      { className: "product-grid" },
      products.map((product) =>
        React.createElement(
          "div",
          { key: product.id, className: "product-card" },
          React.createElement(
            "div",
            { className: "product-card__image-container" },
            React.createElement("img", {
              src: product.imageURL || product.image || "",
              alt: product.name,
              className: "product-card__image",
              onError: (e) => {
                e.target.src = `https://via.placeholder.com/300x300/cccccc/666666?text=${ProductHelpers.getProductTypeLabel(
                  product.type
                )}`;
              },
            }),
            React.createElement(
              "div",
              { className: "product-card__category" },
              ProductHelpers.getProductTypeLabel(product.type),
              ProductHelpers.isProductCustomizable(product) &&
                React.createElement(
                  "span",
                  { className: "customizable-badge" },
                  "üé® –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è"
                )
            )
          ),
          React.createElement(
            "div",
            { className: "product-card__content" },
            React.createElement(
              "h3",
              { className: "product-card__title" },
              product.name
            ),
            product.description &&
              React.createElement(
                "p",
                { className: "product-card__description" },
                product.description
              ),
            React.createElement(
              "div",
              { className: "product-card__sizes" },
              React.createElement(
                "span",
                { className: "sizes-label" },
                "–†–∞–∑–º–µ—Ä—ã:"
              ),
              React.createElement(
                "div",
                { className: "sizes-list" },
                product.sizes.map((size) =>
                  React.createElement(
                    "span",
                    { key: size, className: "size-badge" },
                    size
                  )
                )
              )
            ),
            React.createElement(
              "div",
              { className: "product-card__colors" },
              React.createElement(
                "span",
                { className: "colors-label" },
                "–¶–≤–µ—Ç–∞:"
              ),
              React.createElement(
                "div",
                { className: "colors-list" },
                product.colors.slice(0, 3).map((color) =>
                  React.createElement("div", {
                    key: color.code,
                    className: "color-swatch",
                    style: { backgroundColor: color.hex },
                    title: color.name,
                  })
                ),
                product.colors.length > 3 &&
                  React.createElement(
                    "span",
                    { className: "more-colors" },
                    `+${product.colors.length - 3}`
                  )
              )
            ),
            React.createElement(
              "div",
              { className: "product-card__price" },
              ProductHelpers.formatPrice(product.price)
            ),
            React.createElement(
              "div",
              { className: "product-card__actions" },
              React.createElement(
                "button",
                {
                  className: `btn ${
                    ProductHelpers.isProductCustomizable(product)
                      ? "btn--secondary"
                      : "btn--disabled"
                  }`,
                  onClick: () => handleCustomize(product),
                  disabled: !ProductHelpers.isProductCustomizable(product),
                },
                ProductHelpers.isProductCustomizable(product)
                  ? "–ö–∞—Å—Ç–æ–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å"
                  : "–ù–µ –∫–∞—Å—Ç–æ–º–∏–∑–∏—Ä—É–µ—Ç—Å—è"
              ),
              React.createElement(
                "button",
                {
                  className: "btn btn--primary",
                  onClick: () => handleAddToCart(product),
                },
                "–í –∫–æ—Ä–∑–∏–Ω—É"
              )
            )
          )
        )
      )
    )
  );
}

// Simple Customization placeholder
function Customization() {
  return React.createElement(
    'div',
    { 
      style: { 
        padding: '40px', 
        textAlign: 'center',
        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
        color: 'white',
        minHeight: '60vh',
        display: 'flex',
        flexDirection: 'column',
        justifyContent: 'center',
        alignItems: 'center'
      } 
    },
    React.createElement('h1', { style: { fontSize: '3rem', marginBottom: '20px' } }, 'üé® 3D –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è'),
    React.createElement('p', { style: { fontSize: '1.2rem', marginBottom: '30px' } }, '–ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π 3D —Ä–µ–¥–∞–∫—Ç–æ—Ä —Å Three.js'),
    React.createElement('div', { 
      style: { 
        background: 'rgba(255,255,255,0.2)', 
        padding: '20px', 
        borderRadius: '10px',
        maxWidth: '600px'
      } 
    },
      React.createElement('p', { style: { margin: '10px 0' } }, '‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ 3D –º–æ–¥–µ–ª–µ–π GLB'),
      React.createElement('p', { style: { margin: '10px 0' } }, '‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –Ω–∞–ª–æ–∂–µ–Ω–∏–µ –¥–∏–∑–∞–π–Ω–æ–≤'),
      React.createElement('p', { style: { margin: '10px 0' } }, '‚úÖ –í—ã–±–æ—Ä —Ü–≤–µ—Ç–∞ –∏ —Ä–∞–∑–º–µ—Ä–∞'),
      React.createElement('p', { style: { margin: '10px 0' } }, '‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä'),
      React.createElement('p', { style: { margin: '10px 0' } }, '‚úÖ 3D –≤—Ä–∞—â–µ–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ')
    )
  );
}

// Main App Component with Navigation
function App() {
  const [currentView, setCurrentView] = useState('products');

  return React.createElement(
    'div',
    { className: 'app' },
    React.createElement(
      'nav',
      { className: 'app-navigation' },
      React.createElement(
        'button',
        {
          className: `nav-btn ${currentView === 'products' ? 'active' : ''}`,
          onClick: () => setCurrentView('products')
        },
        '–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤'
      ),
      React.createElement(
        'button',
        {
          className: `nav-btn ${currentView === 'customization' ? 'active' : ''}`,
          onClick: () => setCurrentView('customization')
        },
        '3D –ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è'
      )
    ),
    currentView === 'products' && React.createElement(ProductList),
    currentView === 'customization' && React.createElement(Customization),
    React.createElement('style', {
      dangerouslySetInnerHTML: {
        __html: `
          .app-navigation {
            display: flex;
            gap: 10px;
            padding: 20px;
            justify-content: center;
            background: #f8fafc;
            border-bottom: 1px solid #e2e8f0;
          }

          .nav-btn {
            padding: 12px 24px;
            border: 2px solid #e2e8f0;
            background: white;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.2s;
          }

          .nav-btn:hover {
            border-color: #3b82f6;
            background: #f0f9ff;
          }

          .nav-btn.active {
            background: #3b82f6;
            color: white;
            border-color: #3b82f6;
          }
        `
      }
    })
  );
}

// Initialize the app when DOM is ready
document.addEventListener("DOMContentLoaded", () => {
  const container = document.getElementById("product-list-root");
  if (container) {
    const root = ReactDOM.createRoot(container);
    root.render(React.createElement(App));
  }
});
