// server.js - –°–µ—Ä–≤–µ—Ä–Ω–∞—è —á–∞—Å—Ç—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–æ–≤

const express = require("express");
const multer = require("multer");
const nodemailer = require("nodemailer");
const path = require("path");
const fs = require("fs");
const cors = require("cors");

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.static("public")); // –î–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
app.use("/data", express.static(path.join(__dirname, "data"))); // –î–ª—è JSON —Ñ–∞–π–ª–æ–≤

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ multer –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    const uploadDir = "uploads/designs/";
    if (!fs.existsSync(uploadDir)) {
      fs.mkdirSync(uploadDir, { recursive: true });
    }
    cb(null, uploadDir);
  },
  filename: function (req, file, cb) {
    const uniqueSuffix = Date.now() + "-" + Math.round(Math.random() * 1e9);
    cb(null, "design-" + uniqueSuffix + path.extname(file.originalname));
  },
});

const fileFilter = (req, file, cb) => {
  const allowedTypes = [
    "image/jpeg",
    "image/jpg",
    "image/png",
    "application/pdf",
  ];
  if (allowedTypes.includes(file.mimetype)) {
    cb(null, true);
  } else {
    cb(new Error("–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞"), false);
  }
};

const upload = multer({
  storage: storage,
  fileFilter: fileFilter,
  limits: {
    fileSize: 10 * 1024 * 1024, // 10 –ú–ë
  },
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ nodemailer
const transporter = nodemailer.createTransport({
  // –î–ª—è Gmail
  service: "gmail",
  auth: {
    user: process.env.EMAIL_USER || "your-email@gmail.com",
    pass: process.env.EMAIL_PASS || "your-app-password",
  },

  // –î–ª—è –¥—Ä—É–≥–∏—Ö SMTP —Å–µ—Ä–≤–µ—Ä–æ–≤
  /*
    host: 'smtp.your-email-provider.com',
    port: 587,
    secure: false,
    auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS
    }
    */
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ email
transporter.verify((error, success) => {
  if (error) {
    console.log("–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ email:", error);
    console.log("üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –≤ —Ä–µ–∂–∏–º–µ –±–µ–∑ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π");
  } else {
    console.log("Email —Å–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π");
  }
});

// –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ MongoDB, PostgreSQL –∏ —Ç.–¥.)
let orders = [];
let orderCounter = 1000;

// –¶–µ–Ω—ã —Ç–æ–≤–∞—Ä–æ–≤
const productPrices = {
  tshirt: 1299,
  underwear: 699,
  hoodie: 2599,
  tank: 999,
};

// –ù–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –∏ —Ü–≤–µ—Ç–æ–≤ –¥–ª—è email
const productNames = {
  tshirt: "–§—É—Ç–±–æ–ª–∫–∞",
  underwear: "–ù–∏–∂–Ω–µ–µ –±–µ–ª—å–µ",
  hoodie: "–•—É–¥–∏",
  tank: "–ú–∞–π–∫–∞",
};

const colorNames = {
  white: "–ë–µ–ª—ã–π",
  black: "–ß–µ—Ä–Ω—ã–π",
  navy: "–¢–µ–º–Ω–æ-—Å–∏–Ω–∏–π",
  gray: "–°–µ—Ä—ã–π",
  red: "–ö—Ä–∞—Å–Ω—ã–π",
  green: "–ó–µ–ª–µ–Ω—ã–π",
};

// –ú–∞—Ä—à—Ä—É—Ç—ã

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
app.get("/", (req, res) => {
  res.sendFile(path.join(__dirname, "main.html"));
});

// –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤
app.get("/catalog", (req, res) => {
  res.sendFile(path.join(__dirname, "index.html"));
});

// –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
app.get("/admin", (req, res) => {
  res.sendFile(path.join(__dirname, "admin.html"));
});

// –ü—Ä–æ—Å—Ç–∞—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
app.get("/simple-admin", (req, res) => {
  res.sendFile(path.join(__dirname, "simple-admin.html"));
});

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤
app.get("/test-orders", (req, res) => {
  res.sendFile(path.join(__dirname, "test-orders.html"));
});

// –î–µ–º–æ —Å—Ö–µ–º—ã –ø—Ä–æ–¥—É–∫—Ç–∞
app.get("/product-schema-demo", (req, res) => {
  res.sendFile(path.join(__dirname, "product-schema-demo.html"));
});

// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
app.post(
  "/api/orders",
  upload.fields([
    { name: "designFile", maxCount: 1 },
    { name: "mockupImage", maxCount: 1 },
  ]),
  async (req, res) => {
    try {
      const {
        productType,
        color,
        size,
        fullName,
        email,
        phone,
        city,
        address,
        notes,
      } = req.body;

      // –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª—ã –∏–∑ req.files
      const designFile = req.files?.designFile?.[0];
      const mockupImage = req.files?.mockupImage?.[0];

      // –ü–æ–¥—Ä–æ–±–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      const validationResult = validateOrderData({
        productType,
        color,
        size,
        fullName,
        email,
        phone,
        city,
        address,
        designFile: designFile,
      });

      if (!validationResult.isValid) {
        return res.status(400).json({
          error: "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
          details: validationResult.errors,
          field: validationResult.field,
        });
      }

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ –¥–∏–∑–∞–π–Ω–∞
      if (!designFile) {
        return res.status(400).json({
          error: "–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –¥–∏–∑–∞–π–Ω–∞",
          field: "designFile",
        });
      }

      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–∞
      const fileValidation = validateDesignFile(designFile);
      if (!fileValidation.isValid) {
        return res.status(400).json({
          error: fileValidation.error,
          field: "designFile",
        });
      }

      // –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º ID
      const orderId = generateOrderId();
      const totalPrice = calculateOrderPrice(productType);

      const order = {
        id: orderId,
        orderNumber: `ORD-${Date.now()}-${orderId}`,
        product: {
          type: productType,
          name: productNames[productType],
          color: color,
          colorName: colorNames[color],
          size: size.toUpperCase(),
          price: productPrices[productType],
        },
        customer: {
          fullName: sanitizeInput(fullName),
          email: email.toLowerCase().trim(),
          phone: formatPhoneNumber(phone),
          city: sanitizeInput(city),
          address: sanitizeInput(address),
          notes: sanitizeInput(notes) || "",
        },
        design: {
          filename: designFile.filename,
          originalName: designFile.originalname,
          size: designFile.size,
          path: designFile.path,
          mimetype: designFile.mimetype,
        },
        pricing: {
          productPrice: productPrices[productType],
          printingCost: 500,
          shippingCost: 300,
          totalPrice: totalPrice,
        },
        status: "pending_review",
        statusHistory: [
          {
            status: "pending_review",
            timestamp: new Date().toISOString(),
            note: "–ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏",
          },
        ],
        createdAt: new Date().toISOString(),
        updatedAt: new Date().toISOString(),
      };

      // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –≤ "–±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö" (–º–∞—Å—Å–∏–≤)
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –Ω–∞—Å—Ç–æ—è—â–∞—è –ë–î
      const savedOrder = await saveOrderToDatabase(order);

      // –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ email
      await sendOrderNotifications(savedOrder);

      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –∞—É–¥–∏—Ç–∞
      console.log(`–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω: ${savedOrder.orderNumber}`, {
        orderId: savedOrder.id,
        customer: savedOrder.customer.email,
        product: savedOrder.product.name,
        totalPrice: savedOrder.pricing.totalPrice,
      });

      res.status(201).json({
        success: true,
        message: "–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω",
        data: {
          orderId: savedOrder.id,
          orderNumber: savedOrder.orderNumber,
          totalPrice: savedOrder.pricing.totalPrice,
          estimatedDelivery: calculateEstimatedDelivery(
            savedOrder.customer.city
          ),
          status: savedOrder.status,
        },
      });
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞:", error);

      // –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
      if (designFile && designFile.path) {
        try {
          fs.unlinkSync(designFile.path);
        } catch (deleteError) {
          console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞:", deleteError);
        }
      }

      res.status(500).json({
        error: "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
        message: "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–∫–∞–∑ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É",
      });
    }
  }
);

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏

// –§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞
function validateOrderData(data) {
  const errors = [];

  // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–∏–ø–∞ —Ç–æ–≤–∞—Ä–∞
  if (
    !data.productType ||
    !Object.keys(productPrices).includes(data.productType)
  ) {
    errors.push("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–∏–ø —Ç–æ–≤–∞—Ä–∞");
    return { isValid: false, errors, field: "productType" };
  }

  // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ü–≤–µ—Ç–∞
  const validColors = ["white", "black", "navy", "gray", "red", "green"];
  if (!data.color || !validColors.includes(data.color)) {
    errors.push("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ü–≤–µ—Ç —Ç–æ–≤–∞—Ä–∞");
    return { isValid: false, errors, field: "color" };
  }

  // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–∞
  const validSizes = ["xs", "s", "m", "l", "xl", "xxl"];
  if (!data.size || !validSizes.includes(data.size.toLowerCase())) {
    errors.push("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ç–æ–≤–∞—Ä–∞");
    return { isValid: false, errors, field: "size" };
  }

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –∏–º–µ–Ω–∏
  if (!data.fullName || data.fullName.trim().length < 2) {
    errors.push("–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞");
    return { isValid: false, errors, field: "fullName" };
  }

  // –í–∞–ª–∏–¥–∞—Ü–∏—è email
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  if (!data.email || !emailRegex.test(data.email)) {
    errors.push("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å");
    return { isValid: false, errors, field: "email" };
  }

  // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
  const phoneRegex = /^\+?[7-8][\d\s\-\(\)]{10,}$/;
  if (!data.phone || !phoneRegex.test(data.phone.replace(/\s/g, ""))) {
    errors.push("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞");
    return { isValid: false, errors, field: "phone" };
  }

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –≥–æ—Ä–æ–¥–∞
  if (!data.city || data.city.trim().length < 2) {
    errors.push("–ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞");
    return { isValid: false, errors, field: "city" };
  }

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –∞–¥—Ä–µ—Å–∞
  if (!data.address || data.address.trim().length < 10) {
    errors.push("–ê–¥—Ä–µ—Å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤");
    return { isValid: false, errors, field: "address" };
  }

  return { isValid: true, errors: [] };
}

// –§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–∞–π–ª–∞ –¥–∏–∑–∞–π–Ω–∞
function validateDesignFile(file) {
  if (!file) {
    return { isValid: false, error: "–§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω" };
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ (10 –ú–ë)
  const maxSize = 10 * 1024 * 1024;
  if (file.size > maxSize) {
    return { isValid: false, error: "–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 10 –ú–ë" };
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
  const allowedMimeTypes = [
    "image/jpeg",
    "image/jpg",
    "image/png",
    "application/pdf",
    "image/svg+xml",
  ];

  if (!allowedMimeTypes.includes(file.mimetype)) {
    return {
      isValid: false,
      error: "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: JPG, PNG, PDF, SVG",
    };
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–∞
  const allowedExtensions = [".jpg", ".jpeg", ".png", ".pdf", ".svg"];
  const fileExtension = path.extname(file.originalname).toLowerCase();

  if (!allowedExtensions.includes(fileExtension)) {
    return { isValid: false, error: "–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞" };
  }

  return { isValid: true };
}

// –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ID –∑–∞–∫–∞–∑–∞
function generateOrderId() {
  return orderCounter++;
}

// –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞
function calculateOrderPrice(productType) {
  const productPrice = productPrices[productType] || 0;
  const printingCost = 500;
  const shippingCost = 300;
  return productPrice + printingCost + shippingCost;
}

// –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞
function sanitizeInput(input) {
  if (!input) return "";
  return input.toString().trim().replace(/[<>]/g, "");
}

// –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
function formatPhoneNumber(phone) {
  if (!phone) return "";

  // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä
  const digits = phone.replace(/\D/g, "");

  // –ü—Ä–∏–≤–æ–¥–∏–º –∫ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É
  if (digits.startsWith("8")) {
    return "+7" + digits.slice(1);
  } else if (digits.startsWith("7")) {
    return "+" + digits;
  } else if (digits.length === 10) {
    return "+7" + digits;
  }

  return phone;
}

// –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–æ–π –¥–∞—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏
function calculateEstimatedDelivery(city) {
  const deliveryDays = {
    –º–æ—Å–∫–≤–∞: 1,
    "—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥": 2,
    –µ–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥: 3,
    –Ω–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫: 4,
    –∫–∞–∑–∞–Ω—å: 3,
    "–Ω–∏–∂–Ω–∏–π –Ω–æ–≤–≥–æ—Ä–æ–¥": 2,
    —á–µ–ª—è–±–∏–Ω—Å–∫: 3,
    —Å–∞–º–∞—Ä–∞: 3,
    –æ–º—Å–∫: 4,
    "—Ä–æ—Å—Ç–æ–≤-–Ω–∞-–¥–æ–Ω—É": 3,
    —É—Ñ–∞: 3,
    –∫—Ä–∞—Å–Ω–æ—è—Ä—Å–∫: 5,
    –≤–æ—Ä–æ–Ω–µ–∂: 2,
    –ø–µ—Ä–º—å: 3,
    –≤–æ–ª–≥–æ–≥—Ä–∞–¥: 3,
  };

  const cityLower = city.toLowerCase().trim();
  const days = deliveryDays[cityLower] || 5; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 5 –¥–Ω–µ–π

  const deliveryDate = new Date();
  deliveryDate.setDate(deliveryDate.getDate() + days + 3); // +3 –¥–Ω—è –Ω–∞ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ

  return deliveryDate.toLocaleDateString("ru-RU", {
    weekday: "long",
    year: "numeric",
    month: "long",
    day: "numeric",
  });
}

// –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –≤ "–±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"
async function saveOrderToDatabase(order) {
  try {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –±—ã–ª –±—ã –∑–∞–ø—Ä–æ—Å –∫ –ë–î
    // –ù–∞–ø—Ä–∏–º–µ—Ä: await Order.create(order);

    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ –ë–î
    await new Promise((resolve) => setTimeout(resolve, 100));

    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –º–∞—Å—Å–∏–≤ (–∏–º–∏—Ç–∞—Ü–∏—è –ë–î)
    orders.push(order);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª –¥–ª—è –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    try {
      const ordersData = JSON.stringify(orders, null, 2);
      await fs.promises.writeFile("orders.json", ordersData, "utf8");
    } catch (fileError) {
      console.warn("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–∫–∞–∑—ã –≤ —Ñ–∞–π–ª:", fileError.message);
    }

    return order;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞:", error);
    throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–∫–∞–∑ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö");
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤
app.get("/api/orders", (req, res) => {
  res.json(orders);
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞
app.get("/api/orders/:id", (req, res) => {
  const orderId = parseInt(req.params.id);
  const order = orders.find((o) => o.id === orderId);

  if (!order) {
    return res.status(404).json({
      error: "–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω",
    });
  }

  res.json(order);
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
app.patch("/api/orders/:id/status", (req, res) => {
  const orderId = parseInt(req.params.id);
  const { status } = req.body;

  const orderIndex = orders.findIndex((o) => o.id === orderId);

  if (orderIndex === -1) {
    return res.status(404).json({
      error: "–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω",
    });
  }

  orders[orderIndex].status = status;
  orders[orderIndex].updatedAt = new Date().toISOString();

  res.json({
    success: true,
    message: "–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω",
  });
});

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
async function sendOrderNotifications(order) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É email —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ—Ä–∞
    if (!transporter) {
      console.warn("Email —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ—Ä –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã");
      return;
    }

    const emailPromises = [];

    // Email –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const adminEmailOptions = {
      from: process.env.EMAIL_USER || "noreply@yourstore.com",
      to: process.env.ADMIN_EMAIL || "admin@yourstore.com",
      subject: `üÜï –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ ${order.orderNumber}`,
      html: generateAdminEmailHTML(order),
      attachments: [
        {
          filename: order.design.originalName,
          path: order.design.path,
          cid: "design-file",
        },
      ],
    };

    // Email –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
    const customerEmailOptions = {
      from: process.env.EMAIL_USER || "noreply@yourstore.com",
      to: order.customer.email,
      subject: `‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ ${order.orderNumber}`,
      html: generateCustomerEmailHTML(order),
      replyTo:
        process.env.SUPPORT_EMAIL ||
        process.env.ADMIN_EMAIL ||
        "support@yourstore.com",
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ª–∏ email
    const emailConfigured =
      process.env.EMAIL_USER &&
      process.env.EMAIL_PASS &&
      !process.env.EMAIL_USER.includes("your-email") &&
      !process.env.EMAIL_PASS.includes("your-app-password");

    if (!emailConfigured) {
      console.log("‚ö†Ô∏è Email –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞");
    } else {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
      emailPromises.push(
        transporter.sendMail(adminEmailOptions).catch((error) => {
          console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É:", error);
          return { error: "admin_email_failed" };
        })
      );

      emailPromises.push(
        transporter.sendMail(customerEmailOptions).catch((error) => {
          console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email –∫–ª–∏–µ–Ω—Ç—É:", error);
          return { error: "customer_email_failed" };
        })
      );
    }

    const results = await Promise.all(emailPromises);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤–∫–∏
    const adminResult = results[0];
    const customerResult = results[1];

    let successCount = 0;
    if (!adminResult.error) {
      console.log(
        `‚úÖ Email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –¥–ª—è –∑–∞–∫–∞–∑–∞ ${order.orderNumber}`
      );
      successCount++;
    }

    if (!customerResult.error) {
      console.log(`‚úÖ Email –∫–ª–∏–µ–Ω—Ç—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –¥–ª—è –∑–∞–∫–∞–∑–∞ ${order.orderNumber}`);
      successCount++;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± email
    const emailStatus = {
      adminEmailSent: !adminResult.error,
      customerEmailSent: !customerResult.error,
      emailSentAt: new Date().toISOString(),
    };

    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± email –≤ –∑–∞–∫–∞–∑
    order.emailNotifications = emailStatus;

    if (successCount === 0) {
      throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ–≥–æ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è");
    }

    console.log(
      `üìß –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${successCount}/2 email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –∑–∞–∫–∞–∑–∞ ${order.orderNumber}`
    );
  } catch (error) {
    console.error("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:", error);
    // –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
  }
}

// –£–ª—É—á—à–µ–Ω–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –¥–ª—è email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
function generateAdminEmailHTML(order) {
  return `
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <style>
            body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Arial, sans-serif; line-height: 1.6; color: #333; margin: 0; padding: 0; }
            .container { max-width: 600px; margin: 0 auto; background: white; }
            .header { background: linear-gradient(135deg, #2c5aa0 0%, #1e3d6f 100%); color: white; padding: 30px 20px; text-align: center; }
            .header h1 { margin: 0; font-size: 24px; }
            .header .order-number { font-size: 14px; opacity: 0.9; margin-top: 5px; }
            .content { padding: 30px 20px; background: #f8f9fa; }
            .order-details { background: white; padding: 20px; margin: 15px 0; border-radius: 8px; border-left: 4px solid #2c5aa0; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
            .detail-row { display: flex; justify-content: space-between; margin: 10px 0; padding: 8px 0; border-bottom: 1px solid #eee; }
            .detail-row:last-child { border-bottom: none; }
            .detail-label { font-weight: 600; color: #555; }
            .detail-value { color: #333; }
            .total { font-size: 20px; font-weight: bold; color: #2c5aa0; background: #f0f4ff; padding: 15px; border-radius: 6px; text-align: center; margin: 20px 0; }
            .status-badge { display: inline-block; padding: 4px 12px; border-radius: 20px; font-size: 12px; font-weight: 600; text-transform: uppercase; background: #fff3cd; color: #856404; }
            .footer { background: #fff; padding: 20px; text-align: center; border-top: 1px solid #eee; font-size: 14px; color: #666; }
            .urgent { background: #fff5f5; border-left-color: #ef4444; }
            .section-title { color: #2c5aa0; font-size: 18px; font-weight: 600; margin-bottom: 15px; border-bottom: 2px solid #e0e7ff; padding-bottom: 5px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>üÜï –ù–æ–≤—ã–π –∑–∞–∫–∞–∑</h1>
                <div class="order-number">${order.orderNumber}</div>
            </div>
            <div class="content">
                <div class="order-details urgent">
                    <h3 class="section-title">üì¶ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ</h3>
                    <div class="detail-row">
                        <span class="detail-label">–¢–∏–ø —Ç–æ–≤–∞—Ä–∞:</span>
                        <span class="detail-value">${order.product.name}</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">–¶–≤–µ—Ç:</span>
                        <span class="detail-value">${
                          order.product.colorName
                        }</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">–†–∞–∑–º–µ—Ä:</span>
                        <span class="detail-value">${order.product.size}</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">–ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞:</span>
                        <span class="detail-value">${
                          order.product.price
                        } ‚ÇΩ</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">–°—Ç–∞—Ç—É—Å:</span>
                        <span class="detail-value"><span class="status-badge">${
                          order.status
                        }</span></span>
                    </div>
                </div>
                
                <div class="order-details">
                    <h3 class="section-title">üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ</h3>
                    <div class="detail-row">
                        <span class="detail-label">–ò–º—è:</span>
                        <span class="detail-value">${
                          order.customer.fullName
                        }</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">Email:</span>
                        <span class="detail-value"><a href="mailto:${
                          order.customer.email
                        }">${order.customer.email}</a></span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">–¢–µ–ª–µ—Ñ–æ–Ω:</span>
                        <span class="detail-value"><a href="tel:${
                          order.customer.phone
                        }">${order.customer.phone}</a></span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">–ì–æ—Ä–æ–¥:</span>
                        <span class="detail-value">${order.customer.city}</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">–ê–¥—Ä–µ—Å:</span>
                        <span class="detail-value">${
                          order.customer.address
                        }</span>
                    </div>
                    ${
                      order.customer.notes
                        ? `
                    <div class="detail-row">
                        <span class="detail-label">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:</span>
                        <span class="detail-value">${order.customer.notes}</span>
                    </div>
                    `
                        : ""
                    }
                </div>
                
                <div class="order-details">
                    <h3 class="section-title">üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞</h3>
                    <div class="detail-row">
                        <span class="detail-label">–¢–æ–≤–∞—Ä:</span>
                        <span class="detail-value">${
                          order.pricing.productPrice
                        } ‚ÇΩ</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">–ü–µ—á–∞—Ç—å –¥–∏–∑–∞–π–Ω–∞:</span>
                        <span class="detail-value">${
                          order.pricing.printingCost
                        } ‚ÇΩ</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">–î–æ—Å—Ç–∞–≤–∫–∞:</span>
                        <span class="detail-value">${
                          order.pricing.shippingCost
                        } ‚ÇΩ</span>
                    </div>
                </div>
                
                <div class="total">
                    –ò–¢–û–ì–û: ${order.pricing.totalPrice} ‚ÇΩ
                </div>
                
                <div class="order-details">
                    <h3 class="section-title">üé® –§–∞–π–ª –¥–∏–∑–∞–π–Ω–∞</h3>
                    <div class="detail-row">
                        <span class="detail-label">–ò–º—è —Ñ–∞–π–ª–∞:</span>
                        <span class="detail-value">${
                          order.design.originalName
                        }</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">–†–∞–∑–º–µ—Ä:</span>
                        <span class="detail-value">${(
                          order.design.size /
                          1024 /
                          1024
                        ).toFixed(2)} –ú–ë</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">–¢–∏–ø —Ñ–∞–π–ª–∞:</span>
                        <span class="detail-value">${
                          order.design.mimetype
                        }</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">–ó–∞–≥—Ä—É–∂–µ–Ω:</span>
                        <span class="detail-value">${new Date(
                          order.design.uploadedAt
                        ).toLocaleString("ru-RU")}</span>
                    </div>
                    <p><strong>üìé –§–∞–π–ª –¥–∏–∑–∞–π–Ω–∞ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω –∫ —ç—Ç–æ–º—É –ø–∏—Å—å–º—É</strong></p>
                </div>
                
                <div class="order-details">
                    <h3 class="section-title">üìÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ</h3>
                    <div class="detail-row">
                        <span class="detail-label">ID –∑–∞–∫–∞–∑–∞:</span>
                        <span class="detail-value">${order.id}</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:</span>
                        <span class="detail-value">${order.orderNumber}</span>
                    </div>
                    <div class="detail-row">
                        <span class="detail-label">–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:</span>
                        <span class="detail-value">${new Date(
                          order.createdAt
                        ).toLocaleString("ru-RU")}</span>
                    </div>
                </div>
            </div>
            <div class="footer">
                <p><strong>‚ö° –¢—Ä–µ–±—É–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç–∫–∞!</strong></p>
                <p>–≠—Ç–æ—Ç –∑–∞–∫–∞–∑ –æ–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∏–∑–∞–π–Ω–∞ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.</p>
                <p>–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞–º–∏: <a href="http://localhost:3000/admin">–ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–∫–∞–∑—É</a></p>
            </div>
        </div>
    </body>
    </html>
    `;
}

// –£–ª—É—á—à–µ–Ω–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –¥–ª—è email –∫–ª–∏–µ–Ω—Ç–∞
function generateCustomerEmailHTML(order) {
  return `
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <style>
            body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Arial, sans-serif; line-height: 1.6; color: #333; margin: 0; padding: 0; }
            .container { max-width: 600px; margin: 0 auto; background: white; }
            .header { background: linear-gradient(135deg, #2c5aa0 0%, #1e3d6f 100%); color: white; padding: 30px 20px; text-align: center; }
            .content { padding: 30px 20px; background: #f8f9fa; }
            .order-summary { background: white; padding: 20px; margin: 15px 0; border-radius: 8px; border-left: 4px solid #2c5aa0; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
            .detail-row { display: flex; justify-content: space-between; margin: 10px 0; padding: 8px 0; border-bottom: 1px solid #eee; }
            .detail-row:last-child { border-bottom: none; }
            .total { font-size: 20px; font-weight: bold; color: #2c5aa0; background: #f0f4ff; padding: 15px; border-radius: 6px; text-align: center; margin: 20px 0; }
            .footer { background: #fff; padding: 20px; text-align: center; border-top: 1px solid #eee; font-size: 14px; color: #666; }
            .steps { background: white; padding: 20px; margin: 15px 0; border-radius: 8px; }
            .steps ul { padding-left: 20px; }
            .steps li { margin: 8px 0; }
            .section-title { color: #2c5aa0; font-size: 18px; font-weight: 600; margin-bottom: 15px; }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∑–∞–∫–∞–∑!</h1>
                <p>–ó–∞–∫–∞–∑ ${order.orderNumber} –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É</p>
            </div>
            <div class="content">
                <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <strong>${
                  order.customer.fullName
                }</strong>!</p>
                <p>–ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à –∑–∞–∫–∞–∑ –Ω–∞ –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ç–æ–≤–∞—Ä –∏ –ø—Ä–∏—Å—Ç—É–ø–∏–ª–∏ –∫ –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∫–µ.</p>
                
                <div class="order-summary">
                    <h3 class="section-title">üì¶ –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞</h3>
                    <div class="detail-row">
                        <span><strong>–¢–æ–≤–∞—Ä:</strong></span>
                        <span>${order.product.name}</span>
                    </div>
                    <div class="detail-row">
                        <span><strong>–¶–≤–µ—Ç:</strong></span>
                        <span>${order.product.colorName}</span>
                    </div>
                    <div class="detail-row">
                        <span><strong>–†–∞–∑–º–µ—Ä:</strong></span>
                        <span>${order.product.size}</span>
                    </div>
                    <div class="detail-row">
                        <span><strong>–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:</strong></span>
                        <span>${order.customer.city}, ${
    order.customer.address
  }</span>
                    </div>
                </div>
                
                <div class="total">
                    –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${order.pricing.totalPrice} ‚ÇΩ
                </div>
                
                <div class="steps">
                    <h3 class="section-title">üìã –ß—Ç–æ –¥–∞–ª—å—à–µ</h3>
                    <ul>
                        <li>‚ú® –ú—ã –ø—Ä–æ–≤–µ—Ä–∏–º –≤–∞—à –¥–∏–∑–∞–π–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤</li>
                        <li>üìû –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏–π</li>
                        <li>üé® –ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –∑–∞–π–º–µ—Ç 3-5 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π</li>
                        <li>üöö –î–æ—Å—Ç–∞–≤–∫–∞ 1-3 –¥–Ω—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–≥–∏–æ–Ω–∞</li>
                        <li>üì¨ –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–∞—è –¥–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: <strong>${calculateEstimatedDelivery(
                          order.customer.city
                        )}</strong></li>
                    </ul>
                </div>
                
                <div class="order-summary">
                    <h3 class="section-title">üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã</h3>
                    <p>–ú—ã –æ—Ç–ø—Ä–∞–≤–∏–º –≤–∞–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –Ω–∞ email <strong>${
                      order.customer.email
                    }</strong></p>
                    <p>–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å:</p>
                    <ul>
                        <li>üìß Email: support@yourstore.com</li>
                        <li>üì± –¢–µ–ª–µ—Ñ–æ–Ω: +7 (800) 123-45-67</li>
                        <li>üí¨ Telegram: @yourstore_support</li>
                    </ul>
                </div>
                
                <div class="order-summary">
                    <h3 class="section-title">üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ</h3>
                    <div class="detail-row">
                        <span><strong>–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:</strong></span>
                        <span>${order.orderNumber}</span>
                    </div>
                    <div class="detail-row">
                        <span><strong>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:</strong></span>
                        <span>${new Date(order.createdAt).toLocaleString(
                          "ru-RU"
                        )}</span>
                    </div>
                    <div class="detail-row">
                        <span><strong>–°—Ç–∞—Ç—É—Å:</strong></span>
                        <span>–û–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏</span>
                    </div>
                </div>
            </div>
            
            <div class="footer">
                <p><strong>–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å! üéâ</strong></p>
                <p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br/>–ö–æ–º–∞–Ω–¥–∞ –≤–∞—à–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞</p>
                <p>üåê –°–∞–π—Ç: yourstore.com | üì± –¢–µ–ª–µ—Ñ–æ–Ω: +7 (800) 123-45-67</p>
            </div>
        </div>
    </body>
    </html>
    `;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((error, req, res, next) => {
  if (error instanceof multer.MulterError) {
    if (error.code === "LIMIT_FILE_SIZE") {
      return res.status(400).json({
        error: "–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 10 –ú–ë",
      });
    }
    return res.status(400).json({
      error: "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞",
    });
  }

  console.error(error);
  res.status(500).json({
    error: "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
  });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`–§–æ—Ä–º–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:${PORT}`);
});

module.exports = app;
